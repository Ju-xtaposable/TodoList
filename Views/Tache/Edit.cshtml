@model TodoList.Models.Tache

@{
    List<Categorie> CategoriesList = null;
    CategoriesList = ViewBag.CategoriesList;
    var CategoriesListItems = CategoriesList.Select(item => new SelectListItem() { Text = item.Name, Value = item.Id.ToString() }).ToList();

    List<Badge> BadgesList = null;
    BadgesList = ViewBag.badgesList;
    var BadgesListItems = BadgesList.Select(item => new SelectListItem() { Text = item.Name, Value = item.Id.ToString() }).ToList();
}


<h4>Tache</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" cols="80" rows="10"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select asp-for="CategorieId" asp-items="CategoriesListItems"></select>
            </div>
            <div class="form-group col-md-4">
                <div class="input_fields_wrap ">
                    <button class="btn btn-primary add_field_button">Ajouter un badges</button>
                    @foreach (Badge badge in @Model.Badges)
                    {
                        @if (badge ==  @Model.Badges.First())
                        {
                            <div id="selectModel" class="input-group mb-3">
                                <div class="input-group-append">
                                    <select class="badgesSelector"asp-items="BadgesListItems" name="badges[]"></select>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="input-group-append">
                                <select class="badgesSelector"asp-items="BadgesListItems" name="badges[]"></select>
                                <button class="btn btn-outline-danger remove_field" type="button">Supprimer</button>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="form-group">
                <label asp-for="DateDebut" class="control-label"></label>
                <input asp-for="DateDebut" class="form-control" />
                <span asp-validation-for="DateDebut" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateCible" class="control-label"></label>
                <input asp-for="DateCible" class="form-control" />
                <span asp-validation-for="DateCible" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a class="btn btn-primary" asp-controller="Event" asp-action="FromTache" asp-route-id="@Model.Id" >Cr√©er un Event</a>
                <a class="btn btn-primary" asp-controller="Tache" asp-action="Delete" asp-route-id="@Model.Id" >Delete</a>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Tache" asp-action="Index">Back to List</a>
</div>

@section scripts {
    <script type="text/javascript">
        var badgesString = '@String.Concat(Model.Badges.Select( b => b.Id + ";" ))';
        UpdateBadges(badgesString)
    </script>
}